{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Desktop/Youtube_API/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css'; //import Videos from './components/videos/videos'\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Youtube Channel API\"), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor() {\n    super();\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var chan = ReactDOM.findDOMNode(this.refs.channel).value;\n      var results = ReactDOM.findDOMNode(this.refs.maxResults).value;\n      var phrase = ReactDOM.findDOMNode(this.refs.keyPhrase).value;\n      console.log(chan, results, phrase);\n      fetch('http://localhost:8080/api/channel?channel=' + chan + '&maxResults=' + results + '&keyPhrase=' + phrase).then(res => res.json()).then(videos => this.setState({\n        videos: videos\n      }, () => console.log('Videos fetched: ', videos)));\n    };\n\n    this.state = {\n      videos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/channel').then(res => res.json()).then(videos => this.setState({\n      videos: videos\n    }, () => console.log('Videos fetched: ', videos)));\n  }\n\n  thumbnailClicked() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Specify Search Results:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Channel: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"channel\",\n      id: \"channel\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Number of Videos: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"maxResults\",\n      id: \"maxResults\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Key Terms: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"keyPhrase\",\n      id: \"keyTerms\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"iframe\", {\n      width: \"426\",\n      height: \"240\",\n      src: \"\",\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowfullscreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"videoGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, this.state.videos.map(video => /*#__PURE__*/React.createElement(\"li\", {\n      onCLick: this.thumbnailClicked,\n      class: \"thumbnail\",\n      id: video.id.videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, video.snippet.title), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"icon\",\n      src: video.snippet.thumbnails.default.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Desktop/Youtube_API/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","SubmitHandler","event","preventDefault","chan","findDOMNode","refs","channel","value","results","maxResults","phrase","keyPhrase","console","log","fetch","then","res","json","videos","setState","state","componentDidMount","thumbnailClicked","render","map","video","id","videoId","snippet","title","thumbnails","default","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\n//import Videos from './components/videos/videos'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Youtube Channel API</header>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n        videos: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/channel')\n    .then(res => res.json())\n    .then(videos => this.setState({videos: videos}, () => console.log('Videos fetched: ', videos)));\n  }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var chan = ReactDOM.findDOMNode(this.refs.channel).value;\n    var results = ReactDOM.findDOMNode(this.refs.maxResults).value;\n    var phrase = ReactDOM.findDOMNode(this.refs.keyPhrase).value;\n    console.log(chan,results,phrase);\n    \n    fetch('http://localhost:8080/api/channel?channel='+chan+'&maxResults='+results+'&keyPhrase='+phrase)\n    .then(res => res.json())\n    .then(videos => this.setState({videos: videos}, () => console.log('Videos fetched: ', videos)));\n    \n  }\n\n  thumbnailClicked () {\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"inputForm\">\n          <form onSubmit={this.SubmitHandler}>\n            <p>Specify Search Results:</p>\n            <p>Channel: <input ref=\"channel\" id=\"channel\" type=\"text\"/></p>\n            <p>Number of Videos: <input ref=\"maxResults\" id=\"maxResults\" type=\"text\"/></p>\n            <p>Key Terms: <input ref=\"keyPhrase\" id=\"keyTerms\" type=\"text\"/></p>\n            <a></a>\n            <input type='submit'/>\n          </form>\n          <iframe width=\"426\" height=\"240\" src=\"\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </div>\n        <div id=\"videoGrid\">\n          <ul id=\"videos\">\n              {this.state.videos.map(video => \n                <li onCLick={this.thumbnailClicked} class=\"thumbnail\" id={video.id.videoId}>\n                  <h1 class=\"title\">{video.snippet.title}</h1>\n                  <img class=\"icon\" src={video.snippet.thumbnails.default.url}></img>\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}