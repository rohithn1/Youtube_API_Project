{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Desktop/Youtube_API/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css'; //import Videos from './components/videos/videos'\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Youtube Channel API\"), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var chan = ReactDOM.findDOMNode(this.refs.channel).value;\n      var results = ReactDOM.findDOMNode(this.refs.maxResults).value;\n      var phrase = ReactDOM.findDOMNode(this.refs.keyPhrase).value;\n      console.log(chan, results, phrase);\n      fetch('http://localhost:8080/api/channel?channel=' + chan + '&maxResults=' + results + '&keyPhrase=' + phrase).then(res => res.json()).then(videos => this.setState({\n        videos: videos\n      }, () => {\n        if (videos.length > 12) {\n          console.log('more than 12 results');\n        }\n      }));\n    };\n\n    this.thumbnailClicked = e => {\n      ReactDOM.findDOMNode(this.refs.model).src = 'https://www.youtube.com/embed/' + e.currentTarget.id;\n    };\n\n    this.fourColums = e => {\n      if (window.getComputedStyle(ReactDOM.findDOMNode(this.refs.videos)).getPropertyValue(\"column-count\") === 3) {\n        document.getElementById(\"videos\").style.columnCount = 4;\n      } else {\n        document.getElementById(\"videos\").style.columnCount = 3;\n      }\n    };\n\n    this.state = {\n      videos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/channel').then(res => res.json()).then(videos => this.setState({\n      videos: videos\n    }, () => {}));\n  }\n\n  render() {\n    var size = 3;\n    var items = this.state.videos.slice(0, 12).map(video => {\n      return;\n\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        onClick: this.thumbnailClicked,\n        class: \"thumbnail\",\n        id: video.id.videoId,\n        key: video.id.videoId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, video.snippet.title), /*#__PURE__*/React.createElement(\"img\", {\n        class: \"icon\",\n        src: video.snippet.thumbnails.medium.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, video.snippet.description));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Specify Search Results:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Channel: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"channel\",\n      id: \"channel\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Number of Videos: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"maxResults\",\n      id: \"maxResults\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Key Terms: \", /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"keyPhrase\",\n      id: \"keyTerms\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"iframe\", {\n      ref: \"model\",\n      id: \"model\",\n      width: \"426\",\n      height: \"240\",\n      src: \"\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Add 4th Column: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.fourColums,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"videoGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      ref: \"videos\",\n      id: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, this.state.videos.map(video => /*#__PURE__*/React.createElement(\"li\", {\n      onClick: this.thumbnailClicked,\n      class: \"thumbnail\",\n      id: video.id.videoId,\n      key: video.id.videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, video.snippet.title), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"icon\",\n      src: video.snippet.thumbnails.medium.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, video.snippet.description))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Desktop/Youtube_API/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","props","SubmitHandler","event","preventDefault","chan","findDOMNode","refs","channel","value","results","maxResults","phrase","keyPhrase","console","log","fetch","then","res","json","videos","setState","length","thumbnailClicked","e","model","src","currentTarget","id","fourColums","window","getComputedStyle","getPropertyValue","document","getElementById","style","columnCount","state","componentDidMount","render","size","items","slice","map","video","videoId","snippet","title","thumbnails","medium","url","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\n//import Videos from './components/videos/videos'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Youtube Channel API</header>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n        videos: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/channel')\n    .then(res => res.json())\n    .then(videos => this.setState({videos: videos}, () => {}));\n  }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var chan = ReactDOM.findDOMNode(this.refs.channel).value;\n    var results = ReactDOM.findDOMNode(this.refs.maxResults).value;\n    var phrase = ReactDOM.findDOMNode(this.refs.keyPhrase).value;\n    console.log(chan,results,phrase);\n    \n    fetch('http://localhost:8080/api/channel?channel='+chan+'&maxResults='+results+'&keyPhrase='+phrase)\n    .then(res => res.json())\n    .then(videos => this.setState({videos: videos}, () => {\n      if (videos.length > 12) {\n        console.log('more than 12 results');\n      }\n    }));\n    \n  }\n\n  thumbnailClicked = (e) => {\n    ReactDOM.findDOMNode(this.refs.model).src = 'https://www.youtube.com/embed/'+e.currentTarget.id;\n  }\n\n  fourColums = (e) => {\n    if (window.getComputedStyle(ReactDOM.findDOMNode(this.refs.videos)).getPropertyValue(\"column-count\") === 3) {\n      document.getElementById(\"videos\").style.columnCount = 4;\n    } else {\n      document.getElementById(\"videos\").style.columnCount = 3;\n    }\n  }\n\n  render() {\n    var size = 3;\n    var items = this.state.videos.slice(0, 12).map(video => {\n      return \n      (<li onClick={this.thumbnailClicked} class=\"thumbnail\" id={video.id.videoId} key={video.id.videoId}>\n        <h1 class=\"title\">{video.snippet.title}</h1>\n        <img class=\"icon\" src={video.snippet.thumbnails.medium.url}></img>\n        <p class=\"description\">{video.snippet.description}</p>\n      </li>)\n    })\n\n    return (\n      <div className=\"App\">\n        <div id=\"inputForm\">\n          <form onSubmit={this.SubmitHandler}>\n            <p>Specify Search Results:</p>\n            <p>Channel: <input ref=\"channel\" id=\"channel\" type=\"text\"/></p>\n            <p>Number of Videos: <input ref=\"maxResults\" id=\"maxResults\" type=\"text\"/></p>\n            <p>Key Terms: <input ref=\"keyPhrase\" id=\"keyTerms\" type=\"text\"/></p>\n            <a></a>\n            <input type='submit'/>\n          </form>\n          <iframe ref=\"model\" id=\"model\" width=\"426\" height=\"240\" src=\"\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n        </div>\n        <div class=\"switch\">\n          Add 4th Column: <input type=\"checkbox\" onClick={this.fourColums}></input>\n        </div>\n        <div id=\"videoGrid\">\n          <ul ref=\"videos\" id=\"videos\">\n              {this.state.videos.map(video => \n                <li onClick={this.thumbnailClicked} class=\"thumbnail\" id={video.id.videoId} key={video.id.videoId}>\n                  <h1 class=\"title\">{video.snippet.title}</h1>\n                  <img class=\"icon\" src={video.snippet.thumbnails.medium.url}></img>\n                  <p class=\"description\">{video.snippet.description}</p>\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}